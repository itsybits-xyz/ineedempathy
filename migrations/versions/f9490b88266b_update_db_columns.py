"""update_db_columns

Revision ID: f9490b88266b
Revises: c5f683b4a89d
Create Date: 2021-07-22 08:55:45.463313

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "f9490b88266b"
down_revision = "c5f683b4a89d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("stories", schema=None) as batch_op:
        batch_op.drop_index("ix_stories_description")
        batch_op.drop_index("ix_stories_id")

    op.drop_table("stories")
    with op.batch_alter_table("guesses", schema=None) as batch_op:
        batch_op.drop_index("ix_guesses_id")

    op.drop_table("guesses")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index("ix_users_id")
        batch_op.drop_index("ix_users_name")

    op.drop_table("users")
    with op.batch_alter_table("rooms", schema=None) as batch_op:
        batch_op.drop_index("ix_rooms_type")
        batch_op.drop_column("type")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("rooms", schema=None) as batch_op:
        batch_op.add_column(sa.Column("type", sa.VARCHAR(length=18), nullable=False))
        batch_op.create_index("ix_rooms_type", ["type"], unique=False)

    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("room_id", sa.INTEGER(), nullable=True),
        sa.Column("name", sa.VARCHAR(), nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), nullable=True),
        sa.Column("is_superuser", sa.BOOLEAN(), nullable=True),
        sa.CheckConstraint("is_active IN (0, 1)"),
        sa.CheckConstraint("is_superuser IN (0, 1)"),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["rooms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index("ix_users_name", ["name"], unique=False)
        batch_op.create_index("ix_users_id", ["id"], unique=False)

    op.create_table(
        "guesses",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("room_id", sa.INTEGER(), nullable=True),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("story_id", sa.INTEGER(), nullable=True),
        sa.Column("card_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["card_id"],
            ["cards.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["rooms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["story_id"],
            ["stories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("guesses", schema=None) as batch_op:
        batch_op.create_index("ix_guesses_id", ["id"], unique=False)

    op.create_table(
        "stories",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("room_id", sa.INTEGER(), nullable=True),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("card_id", sa.INTEGER(), nullable=True),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["card_id"],
            ["cards.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["rooms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("stories", schema=None) as batch_op:
        batch_op.create_index("ix_stories_id", ["id"], unique=False)
        batch_op.create_index("ix_stories_description", ["description"], unique=False)

    # ### end Alembic commands ###
